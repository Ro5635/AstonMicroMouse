
MicroMouse2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000051a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004a6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000024  00800100  00800100  0000051a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000051a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000054c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  0000058c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012ac  00000000  00000000  0000064c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000097a  00000000  00000000  000018f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001058  00000000  00000000  00002272  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000218  00000000  00000000  000032cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0001030a  00000000  00000000  000034e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007e5  00000000  00000000  000137ee  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  00013fd3  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00003988  00000000  00000000  00014073  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	3d c0       	rjmp	.+122    	; 0x7c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
	...

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d4 e0       	ldi	r29, 0x04	; 4
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_clear_bss>:
  88:	21 e0       	ldi	r18, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	01 c0       	rjmp	.+2      	; 0x92 <.do_clear_bss_start>

00000090 <.do_clear_bss_loop>:
  90:	1d 92       	st	X+, r1

00000092 <.do_clear_bss_start>:
  92:	a4 32       	cpi	r26, 0x24	; 36
  94:	b2 07       	cpc	r27, r18
  96:	e1 f7       	brne	.-8      	; 0x90 <.do_clear_bss_loop>
  98:	df d0       	rcall	.+446    	; 0x258 <main>
  9a:	03 c2       	rjmp	.+1030   	; 0x4a2 <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
  9e:	08 95       	ret

000000a0 <InitMotorRegisters>:
	// 	//Get the set point and set point
	// 	return (lowerMed + HigherMed) / 2;
	//

	return 44;
}
  a0:	80 ef       	ldi	r24, 0xF0	; 240
  a2:	8a b9       	out	0x0a, r24	; 10
  a4:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  a8:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
  ac:	aa e8       	ldi	r26, 0x8A	; 138
  ae:	b0 e0       	ldi	r27, 0x00	; 0
  b0:	11 96       	adiw	r26, 0x01	; 1
  b2:	1c 92       	st	X, r1
  b4:	1e 92       	st	-X, r1
  b6:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
  ba:	e4 eb       	ldi	r30, 0xB4	; 180
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	10 82       	st	Z, r1
  c0:	81 ea       	ldi	r24, 0xA1	; 161
  c2:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
  c6:	89 e0       	ldi	r24, 0x09	; 9
  c8:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  cc:	83 ea       	ldi	r24, 0xA3	; 163
  ce:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
  d2:	81 e0       	ldi	r24, 0x01	; 1
  d4:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
  d8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <LH_Motor_Duty>
  dc:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <LH_Motor_Duty+0x1>
  e0:	11 96       	adiw	r26, 0x01	; 1
  e2:	9c 93       	st	X, r25
  e4:	8e 93       	st	-X, r24
  e6:	a2 e0       	ldi	r26, 0x02	; 2
  e8:	b1 e0       	ldi	r27, 0x01	; 1
  ea:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <Motor_Duty_ptr+0x1>
  ee:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <Motor_Duty_ptr>
  f2:	8c 91       	ld	r24, X
  f4:	80 83       	st	Z, r24
  f6:	08 95       	ret

000000f8 <setMotor>:
  f8:	cf 93       	push	r28
  fa:	df 93       	push	r29
  fc:	ec 01       	movw	r28, r24
  fe:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <LH_Motor_Duty+0x1>
 102:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <LH_Motor_Duty>
 106:	07 2e       	mov	r0, r23
 108:	00 0c       	add	r0, r0
 10a:	88 0b       	sbc	r24, r24
 10c:	99 0b       	sbc	r25, r25
 10e:	da d0       	rcall	.+436    	; 0x2c4 <__floatsisf>
 110:	2a e0       	ldi	r18, 0x0A	; 10
 112:	37 ed       	ldi	r19, 0xD7	; 215
 114:	43 e6       	ldi	r20, 0x63	; 99
 116:	5f e3       	ldi	r21, 0x3F	; 63
 118:	39 d1       	rcall	.+626    	; 0x38c <__mulsf3>
 11a:	a1 d0       	rcall	.+322    	; 0x25e <__fixsfsi>
 11c:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <RH_Motor_Duty+0x1>
 120:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <RH_Motor_Duty>
 124:	d0 93 89 00 	sts	0x0089, r29	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 128:	c0 93 88 00 	sts	0x0088, r28	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 12c:	e2 e0       	ldi	r30, 0x02	; 2
 12e:	f1 e0       	ldi	r31, 0x01	; 1
 130:	f0 93 07 01 	sts	0x0107, r31	; 0x800107 <Motor_Duty_ptr+0x1>
 134:	e0 93 06 01 	sts	0x0106, r30	; 0x800106 <Motor_Duty_ptr>
 138:	80 81       	ld	r24, Z
 13a:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
 13e:	df 91       	pop	r29
 140:	cf 91       	pop	r28
 142:	08 95       	ret

00000144 <signalMotor>:
 144:	cf 93       	push	r28
 146:	df 93       	push	r29
 148:	60 e0       	ldi	r22, 0x00	; 0
 14a:	70 e0       	ldi	r23, 0x00	; 0
 14c:	80 e0       	ldi	r24, 0x00	; 0
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	d3 df       	rcall	.-90     	; 0xf8 <setMotor>
 152:	2f e7       	ldi	r18, 0x7F	; 127
 154:	8a e1       	ldi	r24, 0x1A	; 26
 156:	96 e0       	ldi	r25, 0x06	; 6
 158:	21 50       	subi	r18, 0x01	; 1
 15a:	80 40       	sbci	r24, 0x00	; 0
 15c:	90 40       	sbci	r25, 0x00	; 0
 15e:	e1 f7       	brne	.-8      	; 0x158 <signalMotor+0x14>
 160:	00 c0       	rjmp	.+0      	; 0x162 <signalMotor+0x1e>
 162:	00 00       	nop
 164:	6f ef       	ldi	r22, 0xFF	; 255
 166:	70 e0       	ldi	r23, 0x00	; 0
 168:	8f ef       	ldi	r24, 0xFF	; 255
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	c5 df       	rcall	.-118    	; 0xf8 <setMotor>
 16e:	2f ed       	ldi	r18, 0xDF	; 223
 170:	85 e7       	ldi	r24, 0x75	; 117
 172:	99 e0       	ldi	r25, 0x09	; 9
 174:	21 50       	subi	r18, 0x01	; 1
 176:	80 40       	sbci	r24, 0x00	; 0
 178:	90 40       	sbci	r25, 0x00	; 0
 17a:	e1 f7       	brne	.-8      	; 0x174 <signalMotor+0x30>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <signalMotor+0x3a>
 17e:	00 00       	nop
 180:	60 e0       	ldi	r22, 0x00	; 0
 182:	70 e0       	ldi	r23, 0x00	; 0
 184:	84 e6       	ldi	r24, 0x64	; 100
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	b7 df       	rcall	.-146    	; 0xf8 <setMotor>
 18a:	2f ef       	ldi	r18, 0xFF	; 255
 18c:	82 e5       	ldi	r24, 0x52	; 82
 18e:	97 e0       	ldi	r25, 0x07	; 7
 190:	21 50       	subi	r18, 0x01	; 1
 192:	80 40       	sbci	r24, 0x00	; 0
 194:	90 40       	sbci	r25, 0x00	; 0
 196:	e1 f7       	brne	.-8      	; 0x190 <signalMotor+0x4c>
 198:	00 c0       	rjmp	.+0      	; 0x19a <signalMotor+0x56>
 19a:	00 00       	nop
 19c:	60 e0       	ldi	r22, 0x00	; 0
 19e:	70 e0       	ldi	r23, 0x00	; 0
 1a0:	80 e0       	ldi	r24, 0x00	; 0
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	a9 df       	rcall	.-174    	; 0xf8 <setMotor>
 1a6:	2f e7       	ldi	r18, 0x7F	; 127
 1a8:	8d e6       	ldi	r24, 0x6D	; 109
 1aa:	9d e0       	ldi	r25, 0x0D	; 13
 1ac:	21 50       	subi	r18, 0x01	; 1
 1ae:	80 40       	sbci	r24, 0x00	; 0
 1b0:	90 40       	sbci	r25, 0x00	; 0
 1b2:	e1 f7       	brne	.-8      	; 0x1ac <signalMotor+0x68>
 1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <signalMotor+0x72>
 1b6:	00 00       	nop
 1b8:	68 ec       	ldi	r22, 0xC8	; 200
 1ba:	70 e0       	ldi	r23, 0x00	; 0
 1bc:	80 e0       	ldi	r24, 0x00	; 0
 1be:	90 e0       	ldi	r25, 0x00	; 0
 1c0:	9b df       	rcall	.-202    	; 0xf8 <setMotor>
 1c2:	2f e7       	ldi	r18, 0x7F	; 127
 1c4:	8a e1       	ldi	r24, 0x1A	; 26
 1c6:	96 e0       	ldi	r25, 0x06	; 6
 1c8:	21 50       	subi	r18, 0x01	; 1
 1ca:	80 40       	sbci	r24, 0x00	; 0
 1cc:	90 40       	sbci	r25, 0x00	; 0
 1ce:	e1 f7       	brne	.-8      	; 0x1c8 <signalMotor+0x84>
 1d0:	00 c0       	rjmp	.+0      	; 0x1d2 <signalMotor+0x8e>
 1d2:	00 00       	nop
 1d4:	c0 e0       	ldi	r28, 0x00	; 0
 1d6:	d0 e0       	ldi	r29, 0x00	; 0
 1d8:	6a e0       	ldi	r22, 0x0A	; 10
 1da:	70 e0       	ldi	r23, 0x00	; 0
 1dc:	ce 01       	movw	r24, r28
 1de:	8c df       	rcall	.-232    	; 0xf8 <setMotor>
 1e0:	87 e8       	ldi	r24, 0x87	; 135
 1e2:	93 e1       	ldi	r25, 0x13	; 19
 1e4:	01 97       	sbiw	r24, 0x01	; 1
 1e6:	f1 f7       	brne	.-4      	; 0x1e4 <signalMotor+0xa0>
 1e8:	00 c0       	rjmp	.+0      	; 0x1ea <signalMotor+0xa6>
 1ea:	00 00       	nop
 1ec:	21 96       	adiw	r28, 0x01	; 1
 1ee:	cc 3d       	cpi	r28, 0xDC	; 220
 1f0:	d1 05       	cpc	r29, r1
 1f2:	91 f7       	brne	.-28     	; 0x1d8 <signalMotor+0x94>
 1f4:	cc ed       	ldi	r28, 0xDC	; 220
 1f6:	d0 e0       	ldi	r29, 0x00	; 0
 1f8:	6a e0       	ldi	r22, 0x0A	; 10
 1fa:	70 e0       	ldi	r23, 0x00	; 0
 1fc:	ce 01       	movw	r24, r28
 1fe:	7c df       	rcall	.-264    	; 0xf8 <setMotor>
 200:	87 e8       	ldi	r24, 0x87	; 135
 202:	93 e1       	ldi	r25, 0x13	; 19
 204:	01 97       	sbiw	r24, 0x01	; 1
 206:	f1 f7       	brne	.-4      	; 0x204 <signalMotor+0xc0>
 208:	00 c0       	rjmp	.+0      	; 0x20a <signalMotor+0xc6>
 20a:	00 00       	nop
 20c:	21 97       	sbiw	r28, 0x01	; 1
 20e:	ca 30       	cpi	r28, 0x0A	; 10
 210:	d1 05       	cpc	r29, r1
 212:	91 f7       	brne	.-28     	; 0x1f8 <signalMotor+0xb4>
 214:	60 e0       	ldi	r22, 0x00	; 0
 216:	70 e0       	ldi	r23, 0x00	; 0
 218:	80 e0       	ldi	r24, 0x00	; 0
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	6d df       	rcall	.-294    	; 0xf8 <setMotor>
 21e:	df 91       	pop	r29
 220:	cf 91       	pop	r28
 222:	08 95       	ret

00000224 <initReflectanceArray>:
 224:	81 b1       	in	r24, 0x01	; 1
 226:	81 b9       	out	0x01, r24	; 1
 228:	82 b1       	in	r24, 0x02	; 2
 22a:	82 b9       	out	0x02, r24	; 2
 22c:	08 95       	ret

0000022e <startUp>:
//Prototype:
void startUp(void);

void startUp(void){
	
	board_init();
 22e:	37 df       	rcall	.-402    	; 0x9e <board_init>
	sei();
 230:	78 94       	sei
	InitMotorRegisters();
 232:	36 df       	rcall	.-404    	; 0xa0 <InitMotorRegisters>
	
	//Set up the arrays of reflectance sensor
	initReflectanceArray();
 234:	f7 df       	rcall	.-18     	; 0x224 <initReflectanceArray>
	
	//Calibrate the opto sensor
	GLOBAL_OptoSetPoint =  33;//getCalibratedSetPoint();
 236:	81 e2       	ldi	r24, 0x21	; 33
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 23e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 242:	2f e7       	ldi	r18, 0x7F	; 127
 244:	86 e9       	ldi	r24, 0x96	; 150
 246:	98 e9       	ldi	r25, 0x98	; 152
 248:	21 50       	subi	r18, 0x01	; 1
 24a:	80 40       	sbci	r24, 0x00	; 0
 24c:	90 40       	sbci	r25, 0x00	; 0
 24e:	e1 f7       	brne	.-8      	; 0x248 <startUp+0x1a>
 250:	00 c0       	rjmp	.+0      	; 0x252 <startUp+0x24>
 252:	00 00       	nop
	
	_delay_ms(2500);
	signalMotor();
 254:	77 cf       	rjmp	.-274    	; 0x144 <signalMotor>
 256:	08 95       	ret

00000258 <main>:
}

int main(void){

	//Set Up The Robot 
	startUp();
 258:	ea df       	rcall	.-44     	; 0x22e <startUp>
	
	while (1)
	{
		startUp();
 25a:	e9 df       	rcall	.-46     	; 0x22e <startUp>
	}
 25c:	fe cf       	rjmp	.-4      	; 0x25a <main+0x2>

0000025e <__fixsfsi>:
 25e:	04 d0       	rcall	.+8      	; 0x268 <__fixunssfsi>
 260:	68 94       	set
 262:	b1 11       	cpse	r27, r1
 264:	8d c0       	rjmp	.+282    	; 0x380 <__fp_szero>
 266:	08 95       	ret

00000268 <__fixunssfsi>:
 268:	70 d0       	rcall	.+224    	; 0x34a <__fp_splitA>
 26a:	88 f0       	brcs	.+34     	; 0x28e <__fixunssfsi+0x26>
 26c:	9f 57       	subi	r25, 0x7F	; 127
 26e:	90 f0       	brcs	.+36     	; 0x294 <__fixunssfsi+0x2c>
 270:	b9 2f       	mov	r27, r25
 272:	99 27       	eor	r25, r25
 274:	b7 51       	subi	r27, 0x17	; 23
 276:	a0 f0       	brcs	.+40     	; 0x2a0 <__fixunssfsi+0x38>
 278:	d1 f0       	breq	.+52     	; 0x2ae <__fixunssfsi+0x46>
 27a:	66 0f       	add	r22, r22
 27c:	77 1f       	adc	r23, r23
 27e:	88 1f       	adc	r24, r24
 280:	99 1f       	adc	r25, r25
 282:	1a f0       	brmi	.+6      	; 0x28a <__fixunssfsi+0x22>
 284:	ba 95       	dec	r27
 286:	c9 f7       	brne	.-14     	; 0x27a <__fixunssfsi+0x12>
 288:	12 c0       	rjmp	.+36     	; 0x2ae <__fixunssfsi+0x46>
 28a:	b1 30       	cpi	r27, 0x01	; 1
 28c:	81 f0       	breq	.+32     	; 0x2ae <__fixunssfsi+0x46>
 28e:	77 d0       	rcall	.+238    	; 0x37e <__fp_zero>
 290:	b1 e0       	ldi	r27, 0x01	; 1
 292:	08 95       	ret
 294:	74 c0       	rjmp	.+232    	; 0x37e <__fp_zero>
 296:	67 2f       	mov	r22, r23
 298:	78 2f       	mov	r23, r24
 29a:	88 27       	eor	r24, r24
 29c:	b8 5f       	subi	r27, 0xF8	; 248
 29e:	39 f0       	breq	.+14     	; 0x2ae <__fixunssfsi+0x46>
 2a0:	b9 3f       	cpi	r27, 0xF9	; 249
 2a2:	cc f3       	brlt	.-14     	; 0x296 <__fixunssfsi+0x2e>
 2a4:	86 95       	lsr	r24
 2a6:	77 95       	ror	r23
 2a8:	67 95       	ror	r22
 2aa:	b3 95       	inc	r27
 2ac:	d9 f7       	brne	.-10     	; 0x2a4 <__fixunssfsi+0x3c>
 2ae:	3e f4       	brtc	.+14     	; 0x2be <__fixunssfsi+0x56>
 2b0:	90 95       	com	r25
 2b2:	80 95       	com	r24
 2b4:	70 95       	com	r23
 2b6:	61 95       	neg	r22
 2b8:	7f 4f       	sbci	r23, 0xFF	; 255
 2ba:	8f 4f       	sbci	r24, 0xFF	; 255
 2bc:	9f 4f       	sbci	r25, 0xFF	; 255
 2be:	08 95       	ret

000002c0 <__floatunsisf>:
 2c0:	e8 94       	clt
 2c2:	09 c0       	rjmp	.+18     	; 0x2d6 <__floatsisf+0x12>

000002c4 <__floatsisf>:
 2c4:	97 fb       	bst	r25, 7
 2c6:	3e f4       	brtc	.+14     	; 0x2d6 <__floatsisf+0x12>
 2c8:	90 95       	com	r25
 2ca:	80 95       	com	r24
 2cc:	70 95       	com	r23
 2ce:	61 95       	neg	r22
 2d0:	7f 4f       	sbci	r23, 0xFF	; 255
 2d2:	8f 4f       	sbci	r24, 0xFF	; 255
 2d4:	9f 4f       	sbci	r25, 0xFF	; 255
 2d6:	99 23       	and	r25, r25
 2d8:	a9 f0       	breq	.+42     	; 0x304 <__floatsisf+0x40>
 2da:	f9 2f       	mov	r31, r25
 2dc:	96 e9       	ldi	r25, 0x96	; 150
 2de:	bb 27       	eor	r27, r27
 2e0:	93 95       	inc	r25
 2e2:	f6 95       	lsr	r31
 2e4:	87 95       	ror	r24
 2e6:	77 95       	ror	r23
 2e8:	67 95       	ror	r22
 2ea:	b7 95       	ror	r27
 2ec:	f1 11       	cpse	r31, r1
 2ee:	f8 cf       	rjmp	.-16     	; 0x2e0 <__floatsisf+0x1c>
 2f0:	fa f4       	brpl	.+62     	; 0x330 <__floatsisf+0x6c>
 2f2:	bb 0f       	add	r27, r27
 2f4:	11 f4       	brne	.+4      	; 0x2fa <__floatsisf+0x36>
 2f6:	60 ff       	sbrs	r22, 0
 2f8:	1b c0       	rjmp	.+54     	; 0x330 <__floatsisf+0x6c>
 2fa:	6f 5f       	subi	r22, 0xFF	; 255
 2fc:	7f 4f       	sbci	r23, 0xFF	; 255
 2fe:	8f 4f       	sbci	r24, 0xFF	; 255
 300:	9f 4f       	sbci	r25, 0xFF	; 255
 302:	16 c0       	rjmp	.+44     	; 0x330 <__floatsisf+0x6c>
 304:	88 23       	and	r24, r24
 306:	11 f0       	breq	.+4      	; 0x30c <__floatsisf+0x48>
 308:	96 e9       	ldi	r25, 0x96	; 150
 30a:	11 c0       	rjmp	.+34     	; 0x32e <__floatsisf+0x6a>
 30c:	77 23       	and	r23, r23
 30e:	21 f0       	breq	.+8      	; 0x318 <__floatsisf+0x54>
 310:	9e e8       	ldi	r25, 0x8E	; 142
 312:	87 2f       	mov	r24, r23
 314:	76 2f       	mov	r23, r22
 316:	05 c0       	rjmp	.+10     	; 0x322 <__floatsisf+0x5e>
 318:	66 23       	and	r22, r22
 31a:	71 f0       	breq	.+28     	; 0x338 <__floatsisf+0x74>
 31c:	96 e8       	ldi	r25, 0x86	; 134
 31e:	86 2f       	mov	r24, r22
 320:	70 e0       	ldi	r23, 0x00	; 0
 322:	60 e0       	ldi	r22, 0x00	; 0
 324:	2a f0       	brmi	.+10     	; 0x330 <__floatsisf+0x6c>
 326:	9a 95       	dec	r25
 328:	66 0f       	add	r22, r22
 32a:	77 1f       	adc	r23, r23
 32c:	88 1f       	adc	r24, r24
 32e:	da f7       	brpl	.-10     	; 0x326 <__floatsisf+0x62>
 330:	88 0f       	add	r24, r24
 332:	96 95       	lsr	r25
 334:	87 95       	ror	r24
 336:	97 f9       	bld	r25, 7
 338:	08 95       	ret

0000033a <__fp_split3>:
 33a:	57 fd       	sbrc	r21, 7
 33c:	90 58       	subi	r25, 0x80	; 128
 33e:	44 0f       	add	r20, r20
 340:	55 1f       	adc	r21, r21
 342:	59 f0       	breq	.+22     	; 0x35a <__fp_splitA+0x10>
 344:	5f 3f       	cpi	r21, 0xFF	; 255
 346:	71 f0       	breq	.+28     	; 0x364 <__fp_splitA+0x1a>
 348:	47 95       	ror	r20

0000034a <__fp_splitA>:
 34a:	88 0f       	add	r24, r24
 34c:	97 fb       	bst	r25, 7
 34e:	99 1f       	adc	r25, r25
 350:	61 f0       	breq	.+24     	; 0x36a <__fp_splitA+0x20>
 352:	9f 3f       	cpi	r25, 0xFF	; 255
 354:	79 f0       	breq	.+30     	; 0x374 <__fp_splitA+0x2a>
 356:	87 95       	ror	r24
 358:	08 95       	ret
 35a:	12 16       	cp	r1, r18
 35c:	13 06       	cpc	r1, r19
 35e:	14 06       	cpc	r1, r20
 360:	55 1f       	adc	r21, r21
 362:	f2 cf       	rjmp	.-28     	; 0x348 <__fp_split3+0xe>
 364:	46 95       	lsr	r20
 366:	f1 df       	rcall	.-30     	; 0x34a <__fp_splitA>
 368:	08 c0       	rjmp	.+16     	; 0x37a <__fp_splitA+0x30>
 36a:	16 16       	cp	r1, r22
 36c:	17 06       	cpc	r1, r23
 36e:	18 06       	cpc	r1, r24
 370:	99 1f       	adc	r25, r25
 372:	f1 cf       	rjmp	.-30     	; 0x356 <__fp_splitA+0xc>
 374:	86 95       	lsr	r24
 376:	71 05       	cpc	r23, r1
 378:	61 05       	cpc	r22, r1
 37a:	08 94       	sec
 37c:	08 95       	ret

0000037e <__fp_zero>:
 37e:	e8 94       	clt

00000380 <__fp_szero>:
 380:	bb 27       	eor	r27, r27
 382:	66 27       	eor	r22, r22
 384:	77 27       	eor	r23, r23
 386:	cb 01       	movw	r24, r22
 388:	97 f9       	bld	r25, 7
 38a:	08 95       	ret

0000038c <__mulsf3>:
 38c:	0b d0       	rcall	.+22     	; 0x3a4 <__mulsf3x>
 38e:	78 c0       	rjmp	.+240    	; 0x480 <__fp_round>
 390:	69 d0       	rcall	.+210    	; 0x464 <__fp_pscA>
 392:	28 f0       	brcs	.+10     	; 0x39e <__mulsf3+0x12>
 394:	6e d0       	rcall	.+220    	; 0x472 <__fp_pscB>
 396:	18 f0       	brcs	.+6      	; 0x39e <__mulsf3+0x12>
 398:	95 23       	and	r25, r21
 39a:	09 f0       	breq	.+2      	; 0x39e <__mulsf3+0x12>
 39c:	5a c0       	rjmp	.+180    	; 0x452 <__fp_inf>
 39e:	5f c0       	rjmp	.+190    	; 0x45e <__fp_nan>
 3a0:	11 24       	eor	r1, r1
 3a2:	ee cf       	rjmp	.-36     	; 0x380 <__fp_szero>

000003a4 <__mulsf3x>:
 3a4:	ca df       	rcall	.-108    	; 0x33a <__fp_split3>
 3a6:	a0 f3       	brcs	.-24     	; 0x390 <__mulsf3+0x4>

000003a8 <__mulsf3_pse>:
 3a8:	95 9f       	mul	r25, r21
 3aa:	d1 f3       	breq	.-12     	; 0x3a0 <__mulsf3+0x14>
 3ac:	95 0f       	add	r25, r21
 3ae:	50 e0       	ldi	r21, 0x00	; 0
 3b0:	55 1f       	adc	r21, r21
 3b2:	62 9f       	mul	r22, r18
 3b4:	f0 01       	movw	r30, r0
 3b6:	72 9f       	mul	r23, r18
 3b8:	bb 27       	eor	r27, r27
 3ba:	f0 0d       	add	r31, r0
 3bc:	b1 1d       	adc	r27, r1
 3be:	63 9f       	mul	r22, r19
 3c0:	aa 27       	eor	r26, r26
 3c2:	f0 0d       	add	r31, r0
 3c4:	b1 1d       	adc	r27, r1
 3c6:	aa 1f       	adc	r26, r26
 3c8:	64 9f       	mul	r22, r20
 3ca:	66 27       	eor	r22, r22
 3cc:	b0 0d       	add	r27, r0
 3ce:	a1 1d       	adc	r26, r1
 3d0:	66 1f       	adc	r22, r22
 3d2:	82 9f       	mul	r24, r18
 3d4:	22 27       	eor	r18, r18
 3d6:	b0 0d       	add	r27, r0
 3d8:	a1 1d       	adc	r26, r1
 3da:	62 1f       	adc	r22, r18
 3dc:	73 9f       	mul	r23, r19
 3de:	b0 0d       	add	r27, r0
 3e0:	a1 1d       	adc	r26, r1
 3e2:	62 1f       	adc	r22, r18
 3e4:	83 9f       	mul	r24, r19
 3e6:	a0 0d       	add	r26, r0
 3e8:	61 1d       	adc	r22, r1
 3ea:	22 1f       	adc	r18, r18
 3ec:	74 9f       	mul	r23, r20
 3ee:	33 27       	eor	r19, r19
 3f0:	a0 0d       	add	r26, r0
 3f2:	61 1d       	adc	r22, r1
 3f4:	23 1f       	adc	r18, r19
 3f6:	84 9f       	mul	r24, r20
 3f8:	60 0d       	add	r22, r0
 3fa:	21 1d       	adc	r18, r1
 3fc:	82 2f       	mov	r24, r18
 3fe:	76 2f       	mov	r23, r22
 400:	6a 2f       	mov	r22, r26
 402:	11 24       	eor	r1, r1
 404:	9f 57       	subi	r25, 0x7F	; 127
 406:	50 40       	sbci	r21, 0x00	; 0
 408:	8a f0       	brmi	.+34     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 40a:	e1 f0       	breq	.+56     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 40c:	88 23       	and	r24, r24
 40e:	4a f0       	brmi	.+18     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 410:	ee 0f       	add	r30, r30
 412:	ff 1f       	adc	r31, r31
 414:	bb 1f       	adc	r27, r27
 416:	66 1f       	adc	r22, r22
 418:	77 1f       	adc	r23, r23
 41a:	88 1f       	adc	r24, r24
 41c:	91 50       	subi	r25, 0x01	; 1
 41e:	50 40       	sbci	r21, 0x00	; 0
 420:	a9 f7       	brne	.-22     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 422:	9e 3f       	cpi	r25, 0xFE	; 254
 424:	51 05       	cpc	r21, r1
 426:	70 f0       	brcs	.+28     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 428:	14 c0       	rjmp	.+40     	; 0x452 <__fp_inf>
 42a:	aa cf       	rjmp	.-172    	; 0x380 <__fp_szero>
 42c:	5f 3f       	cpi	r21, 0xFF	; 255
 42e:	ec f3       	brlt	.-6      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 430:	98 3e       	cpi	r25, 0xE8	; 232
 432:	dc f3       	brlt	.-10     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 434:	86 95       	lsr	r24
 436:	77 95       	ror	r23
 438:	67 95       	ror	r22
 43a:	b7 95       	ror	r27
 43c:	f7 95       	ror	r31
 43e:	e7 95       	ror	r30
 440:	9f 5f       	subi	r25, 0xFF	; 255
 442:	c1 f7       	brne	.-16     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 444:	fe 2b       	or	r31, r30
 446:	88 0f       	add	r24, r24
 448:	91 1d       	adc	r25, r1
 44a:	96 95       	lsr	r25
 44c:	87 95       	ror	r24
 44e:	97 f9       	bld	r25, 7
 450:	08 95       	ret

00000452 <__fp_inf>:
 452:	97 f9       	bld	r25, 7
 454:	9f 67       	ori	r25, 0x7F	; 127
 456:	80 e8       	ldi	r24, 0x80	; 128
 458:	70 e0       	ldi	r23, 0x00	; 0
 45a:	60 e0       	ldi	r22, 0x00	; 0
 45c:	08 95       	ret

0000045e <__fp_nan>:
 45e:	9f ef       	ldi	r25, 0xFF	; 255
 460:	80 ec       	ldi	r24, 0xC0	; 192
 462:	08 95       	ret

00000464 <__fp_pscA>:
 464:	00 24       	eor	r0, r0
 466:	0a 94       	dec	r0
 468:	16 16       	cp	r1, r22
 46a:	17 06       	cpc	r1, r23
 46c:	18 06       	cpc	r1, r24
 46e:	09 06       	cpc	r0, r25
 470:	08 95       	ret

00000472 <__fp_pscB>:
 472:	00 24       	eor	r0, r0
 474:	0a 94       	dec	r0
 476:	12 16       	cp	r1, r18
 478:	13 06       	cpc	r1, r19
 47a:	14 06       	cpc	r1, r20
 47c:	05 06       	cpc	r0, r21
 47e:	08 95       	ret

00000480 <__fp_round>:
 480:	09 2e       	mov	r0, r25
 482:	03 94       	inc	r0
 484:	00 0c       	add	r0, r0
 486:	11 f4       	brne	.+4      	; 0x48c <__fp_round+0xc>
 488:	88 23       	and	r24, r24
 48a:	52 f0       	brmi	.+20     	; 0x4a0 <__fp_round+0x20>
 48c:	bb 0f       	add	r27, r27
 48e:	40 f4       	brcc	.+16     	; 0x4a0 <__fp_round+0x20>
 490:	bf 2b       	or	r27, r31
 492:	11 f4       	brne	.+4      	; 0x498 <__fp_round+0x18>
 494:	60 ff       	sbrs	r22, 0
 496:	04 c0       	rjmp	.+8      	; 0x4a0 <__fp_round+0x20>
 498:	6f 5f       	subi	r22, 0xFF	; 255
 49a:	7f 4f       	sbci	r23, 0xFF	; 255
 49c:	8f 4f       	sbci	r24, 0xFF	; 255
 49e:	9f 4f       	sbci	r25, 0xFF	; 255
 4a0:	08 95       	ret

000004a2 <_exit>:
 4a2:	f8 94       	cli

000004a4 <__stop_program>:
 4a4:	ff cf       	rjmp	.-2      	; 0x4a4 <__stop_program>
