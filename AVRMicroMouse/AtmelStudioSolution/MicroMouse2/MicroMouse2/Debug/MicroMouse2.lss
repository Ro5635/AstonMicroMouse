
MicroMouse2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000608  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000594  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000026  00800100  00800100  00000608  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000608  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000638  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  00000678  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001710  00000000  00000000  00000778  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009b9  00000000  00000000  00001e88  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001233  00000000  00000000  00002841  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002ec  00000000  00000000  00003a74  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000103a1  00000000  00000000  00003d60  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ad3  00000000  00000000  00014101  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00014bd4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00003998  00000000  00000000  00014ccc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	3d c0       	rjmp	.+122    	; 0x7c <__ctors_end>
   2:	00 00       	nop
   4:	56 c0       	rjmp	.+172    	; 0xb2 <__bad_interrupt>
   6:	00 00       	nop
   8:	54 c0       	rjmp	.+168    	; 0xb2 <__bad_interrupt>
   a:	00 00       	nop
   c:	52 c0       	rjmp	.+164    	; 0xb2 <__bad_interrupt>
   e:	00 00       	nop
  10:	50 c0       	rjmp	.+160    	; 0xb2 <__bad_interrupt>
  12:	00 00       	nop
  14:	4e c0       	rjmp	.+156    	; 0xb2 <__bad_interrupt>
  16:	00 00       	nop
  18:	4c c0       	rjmp	.+152    	; 0xb2 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4a c0       	rjmp	.+148    	; 0xb2 <__bad_interrupt>
  1e:	00 00       	nop
  20:	48 c0       	rjmp	.+144    	; 0xb2 <__bad_interrupt>
  22:	00 00       	nop
  24:	46 c0       	rjmp	.+140    	; 0xb2 <__bad_interrupt>
  26:	00 00       	nop
  28:	44 c0       	rjmp	.+136    	; 0xb2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	42 c0       	rjmp	.+132    	; 0xb2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	40 c0       	rjmp	.+128    	; 0xb2 <__bad_interrupt>
  32:	00 00       	nop
  34:	3e c0       	rjmp	.+124    	; 0xb2 <__bad_interrupt>
  36:	00 00       	nop
  38:	3c c0       	rjmp	.+120    	; 0xb2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3a c0       	rjmp	.+116    	; 0xb2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	38 c0       	rjmp	.+112    	; 0xb2 <__bad_interrupt>
  42:	00 00       	nop
  44:	36 c0       	rjmp	.+108    	; 0xb2 <__bad_interrupt>
  46:	00 00       	nop
  48:	6a c1       	rjmp	.+724    	; 0x31e <__vector_18>
  4a:	00 00       	nop
  4c:	32 c0       	rjmp	.+100    	; 0xb2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	30 c0       	rjmp	.+96     	; 0xb2 <__bad_interrupt>
  52:	00 00       	nop
  54:	2e c0       	rjmp	.+92     	; 0xb2 <__bad_interrupt>
  56:	00 00       	nop
  58:	2c c0       	rjmp	.+88     	; 0xb2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2a c0       	rjmp	.+84     	; 0xb2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	28 c0       	rjmp	.+80     	; 0xb2 <__bad_interrupt>
  62:	00 00       	nop
  64:	26 c0       	rjmp	.+76     	; 0xb2 <__bad_interrupt>
  66:	00 00       	nop
  68:	24 c0       	rjmp	.+72     	; 0xb2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	22 c0       	rjmp	.+68     	; 0xb2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	20 c0       	rjmp	.+64     	; 0xb2 <__bad_interrupt>
  72:	00 00       	nop
  74:	1e c0       	rjmp	.+60     	; 0xb2 <__bad_interrupt>
  76:	00 00       	nop
  78:	1c c0       	rjmp	.+56     	; 0xb2 <__bad_interrupt>
	...

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d4 e0       	ldi	r29, 0x04	; 4
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	11 e0       	ldi	r17, 0x01	; 1
  8a:	a0 e0       	ldi	r26, 0x00	; 0
  8c:	b1 e0       	ldi	r27, 0x01	; 1
  8e:	e4 e9       	ldi	r30, 0x94	; 148
  90:	f5 e0       	ldi	r31, 0x05	; 5
  92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
  94:	05 90       	lpm	r0, Z+
  96:	0d 92       	st	X+, r0
  98:	a0 30       	cpi	r26, 0x00	; 0
  9a:	b1 07       	cpc	r27, r17
  9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
  9e:	21 e0       	ldi	r18, 0x01	; 1
  a0:	a0 e0       	ldi	r26, 0x00	; 0
  a2:	b1 e0       	ldi	r27, 0x01	; 1
  a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
  a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
  a8:	a6 32       	cpi	r26, 0x26	; 38
  aa:	b2 07       	cpc	r27, r18
  ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
  ae:	d9 d0       	rcall	.+434    	; 0x262 <main>
  b0:	6f c2       	rjmp	.+1246   	; 0x590 <_exit>

000000b2 <__bad_interrupt>:
  b2:	a6 cf       	rjmp	.-180    	; 0x0 <__vectors>

000000b4 <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
  b4:	08 95       	ret

000000b6 <InitMotorRegisters>:
			TxCharactor(stringArr[i]);
		}
		
	}
	TxCharactor('\r');
}
  b6:	80 ef       	ldi	r24, 0xF0	; 240
  b8:	8a b9       	out	0x0a, r24	; 10
  ba:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  be:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
  c2:	aa e8       	ldi	r26, 0x8A	; 138
  c4:	b0 e0       	ldi	r27, 0x00	; 0
  c6:	11 96       	adiw	r26, 0x01	; 1
  c8:	1c 92       	st	X, r1
  ca:	1e 92       	st	-X, r1
  cc:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
  d0:	e4 eb       	ldi	r30, 0xB4	; 180
  d2:	f0 e0       	ldi	r31, 0x00	; 0
  d4:	10 82       	st	Z, r1
  d6:	81 ea       	ldi	r24, 0xA1	; 161
  d8:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
  dc:	89 e0       	ldi	r24, 0x09	; 9
  de:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
  e2:	83 ea       	ldi	r24, 0xA3	; 163
  e4:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
  e8:	81 e0       	ldi	r24, 0x01	; 1
  ea:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
  ee:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <LH_Motor_Duty>
  f2:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <LH_Motor_Duty+0x1>
  f6:	11 96       	adiw	r26, 0x01	; 1
  f8:	9c 93       	st	X, r25
  fa:	8e 93       	st	-X, r24
  fc:	a4 e0       	ldi	r26, 0x04	; 4
  fe:	b1 e0       	ldi	r27, 0x01	; 1
 100:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <Motor_Duty_ptr+0x1>
 104:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <Motor_Duty_ptr>
 108:	8c 91       	ld	r24, X
 10a:	80 83       	st	Z, r24
 10c:	08 95       	ret

0000010e <setMotor>:
 10e:	cf 93       	push	r28
 110:	df 93       	push	r29
 112:	ec 01       	movw	r28, r24
 114:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <LH_Motor_Duty+0x1>
 118:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <LH_Motor_Duty>
 11c:	07 2e       	mov	r0, r23
 11e:	00 0c       	add	r0, r0
 120:	88 0b       	sbc	r24, r24
 122:	99 0b       	sbc	r25, r25
 124:	46 d1       	rcall	.+652    	; 0x3b2 <__floatsisf>
 126:	2a e0       	ldi	r18, 0x0A	; 10
 128:	37 ed       	ldi	r19, 0xD7	; 215
 12a:	43 e6       	ldi	r20, 0x63	; 99
 12c:	5f e3       	ldi	r21, 0x3F	; 63
 12e:	a5 d1       	rcall	.+842    	; 0x47a <__mulsf3>
 130:	0d d1       	rcall	.+538    	; 0x34c <__fixsfsi>
 132:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <RH_Motor_Duty+0x1>
 136:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <RH_Motor_Duty>
 13a:	d0 93 89 00 	sts	0x0089, r29	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 13e:	c0 93 88 00 	sts	0x0088, r28	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 142:	e4 e0       	ldi	r30, 0x04	; 4
 144:	f1 e0       	ldi	r31, 0x01	; 1
 146:	f0 93 09 01 	sts	0x0109, r31	; 0x800109 <Motor_Duty_ptr+0x1>
 14a:	e0 93 08 01 	sts	0x0108, r30	; 0x800108 <Motor_Duty_ptr>
 14e:	80 81       	ld	r24, Z
 150:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
 154:	df 91       	pop	r29
 156:	cf 91       	pop	r28
 158:	08 95       	ret

0000015a <signalMotor>:
 15a:	cf 93       	push	r28
 15c:	df 93       	push	r29
 15e:	60 e0       	ldi	r22, 0x00	; 0
 160:	70 e0       	ldi	r23, 0x00	; 0
 162:	80 e0       	ldi	r24, 0x00	; 0
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	d3 df       	rcall	.-90     	; 0x10e <setMotor>
 168:	2f e7       	ldi	r18, 0x7F	; 127
 16a:	8a e1       	ldi	r24, 0x1A	; 26
 16c:	96 e0       	ldi	r25, 0x06	; 6
 16e:	21 50       	subi	r18, 0x01	; 1
 170:	80 40       	sbci	r24, 0x00	; 0
 172:	90 40       	sbci	r25, 0x00	; 0
 174:	e1 f7       	brne	.-8      	; 0x16e <signalMotor+0x14>
 176:	00 c0       	rjmp	.+0      	; 0x178 <signalMotor+0x1e>
 178:	00 00       	nop
 17a:	6f ef       	ldi	r22, 0xFF	; 255
 17c:	70 e0       	ldi	r23, 0x00	; 0
 17e:	8f ef       	ldi	r24, 0xFF	; 255
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	c5 df       	rcall	.-118    	; 0x10e <setMotor>
 184:	2f ed       	ldi	r18, 0xDF	; 223
 186:	85 e7       	ldi	r24, 0x75	; 117
 188:	99 e0       	ldi	r25, 0x09	; 9
 18a:	21 50       	subi	r18, 0x01	; 1
 18c:	80 40       	sbci	r24, 0x00	; 0
 18e:	90 40       	sbci	r25, 0x00	; 0
 190:	e1 f7       	brne	.-8      	; 0x18a <signalMotor+0x30>
 192:	00 c0       	rjmp	.+0      	; 0x194 <signalMotor+0x3a>
 194:	00 00       	nop
 196:	60 e0       	ldi	r22, 0x00	; 0
 198:	70 e0       	ldi	r23, 0x00	; 0
 19a:	84 e6       	ldi	r24, 0x64	; 100
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	b7 df       	rcall	.-146    	; 0x10e <setMotor>
 1a0:	2f ef       	ldi	r18, 0xFF	; 255
 1a2:	82 e5       	ldi	r24, 0x52	; 82
 1a4:	97 e0       	ldi	r25, 0x07	; 7
 1a6:	21 50       	subi	r18, 0x01	; 1
 1a8:	80 40       	sbci	r24, 0x00	; 0
 1aa:	90 40       	sbci	r25, 0x00	; 0
 1ac:	e1 f7       	brne	.-8      	; 0x1a6 <signalMotor+0x4c>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <signalMotor+0x56>
 1b0:	00 00       	nop
 1b2:	60 e0       	ldi	r22, 0x00	; 0
 1b4:	70 e0       	ldi	r23, 0x00	; 0
 1b6:	80 e0       	ldi	r24, 0x00	; 0
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	a9 df       	rcall	.-174    	; 0x10e <setMotor>
 1bc:	2f e7       	ldi	r18, 0x7F	; 127
 1be:	8d e6       	ldi	r24, 0x6D	; 109
 1c0:	9d e0       	ldi	r25, 0x0D	; 13
 1c2:	21 50       	subi	r18, 0x01	; 1
 1c4:	80 40       	sbci	r24, 0x00	; 0
 1c6:	90 40       	sbci	r25, 0x00	; 0
 1c8:	e1 f7       	brne	.-8      	; 0x1c2 <signalMotor+0x68>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <signalMotor+0x72>
 1cc:	00 00       	nop
 1ce:	68 ec       	ldi	r22, 0xC8	; 200
 1d0:	70 e0       	ldi	r23, 0x00	; 0
 1d2:	80 e0       	ldi	r24, 0x00	; 0
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	9b df       	rcall	.-202    	; 0x10e <setMotor>
 1d8:	2f e7       	ldi	r18, 0x7F	; 127
 1da:	8a e1       	ldi	r24, 0x1A	; 26
 1dc:	96 e0       	ldi	r25, 0x06	; 6
 1de:	21 50       	subi	r18, 0x01	; 1
 1e0:	80 40       	sbci	r24, 0x00	; 0
 1e2:	90 40       	sbci	r25, 0x00	; 0
 1e4:	e1 f7       	brne	.-8      	; 0x1de <signalMotor+0x84>
 1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <signalMotor+0x8e>
 1e8:	00 00       	nop
 1ea:	c0 e0       	ldi	r28, 0x00	; 0
 1ec:	d0 e0       	ldi	r29, 0x00	; 0
 1ee:	6a e0       	ldi	r22, 0x0A	; 10
 1f0:	70 e0       	ldi	r23, 0x00	; 0
 1f2:	ce 01       	movw	r24, r28
 1f4:	8c df       	rcall	.-232    	; 0x10e <setMotor>
 1f6:	87 e8       	ldi	r24, 0x87	; 135
 1f8:	93 e1       	ldi	r25, 0x13	; 19
 1fa:	01 97       	sbiw	r24, 0x01	; 1
 1fc:	f1 f7       	brne	.-4      	; 0x1fa <signalMotor+0xa0>
 1fe:	00 c0       	rjmp	.+0      	; 0x200 <signalMotor+0xa6>
 200:	00 00       	nop
 202:	21 96       	adiw	r28, 0x01	; 1
 204:	cc 3d       	cpi	r28, 0xDC	; 220
 206:	d1 05       	cpc	r29, r1
 208:	91 f7       	brne	.-28     	; 0x1ee <signalMotor+0x94>
 20a:	cc ed       	ldi	r28, 0xDC	; 220
 20c:	d0 e0       	ldi	r29, 0x00	; 0
 20e:	6a e0       	ldi	r22, 0x0A	; 10
 210:	70 e0       	ldi	r23, 0x00	; 0
 212:	ce 01       	movw	r24, r28
 214:	7c df       	rcall	.-264    	; 0x10e <setMotor>
 216:	87 e8       	ldi	r24, 0x87	; 135
 218:	93 e1       	ldi	r25, 0x13	; 19
 21a:	01 97       	sbiw	r24, 0x01	; 1
 21c:	f1 f7       	brne	.-4      	; 0x21a <signalMotor+0xc0>
 21e:	00 c0       	rjmp	.+0      	; 0x220 <signalMotor+0xc6>
 220:	00 00       	nop
 222:	21 97       	sbiw	r28, 0x01	; 1
 224:	ca 30       	cpi	r28, 0x0A	; 10
 226:	d1 05       	cpc	r29, r1
 228:	91 f7       	brne	.-28     	; 0x20e <signalMotor+0xb4>
 22a:	60 e0       	ldi	r22, 0x00	; 0
 22c:	70 e0       	ldi	r23, 0x00	; 0
 22e:	80 e0       	ldi	r24, 0x00	; 0
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	6d df       	rcall	.-294    	; 0x10e <setMotor>
 234:	df 91       	pop	r29
 236:	cf 91       	pop	r28
 238:	08 95       	ret

0000023a <startUp>:
//Prototype:
void startUp(void);

void startUp(void){
	
	board_init();
 23a:	3c df       	rcall	.-392    	; 0xb4 <board_init>

//	setUpSerialRegisters();
	InitMotorRegisters();
 23c:	3c df       	rcall	.-392    	; 0xb6 <InitMotorRegisters>
	
	//Set up the arrays of reflectance sensor
//	initReflectanceArray();
	
	//Calibrate the opto sensor
	GLOBAL_OptoSetPoint =  55;//getCalibratedSetPoint();
 23e:	87 e3       	ldi	r24, 0x37	; 55
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <GLOBAL_OptoSetPoint+0x1>
 246:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <GLOBAL_OptoSetPoint>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 24a:	2f e7       	ldi	r18, 0x7F	; 127
 24c:	86 e9       	ldi	r24, 0x96	; 150
 24e:	98 e9       	ldi	r25, 0x98	; 152
 250:	21 50       	subi	r18, 0x01	; 1
 252:	80 40       	sbci	r24, 0x00	; 0
 254:	90 40       	sbci	r25, 0x00	; 0
 256:	e1 f7       	brne	.-8      	; 0x250 <startUp+0x16>
 258:	00 c0       	rjmp	.+0      	; 0x25a <startUp+0x20>
 25a:	00 00       	nop
	
	_delay_ms(2500);
	sei();
 25c:	78 94       	sei
	//setUpSerialRegisters();
	signalMotor();
 25e:	7d cf       	rjmp	.-262    	; 0x15a <signalMotor>
 260:	08 95       	ret

00000262 <main>:
}

int main(void){

	//Set Up The Robot 
	startUp();
 262:	eb df       	rcall	.-42     	; 0x23a <startUp>
 264:	0f ef       	ldi	r16, 0xFF	; 255
 266:	10 e0       	ldi	r17, 0x00	; 0
	//PORTD |= 1<<PD3;
	
	
	while(1){
		
		setMotor((250), (250*0.89) );
 268:	6e ed       	ldi	r22, 0xDE	; 222
 26a:	70 e0       	ldi	r23, 0x00	; 0
 26c:	8a ef       	ldi	r24, 0xFA	; 250
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	4e df       	rcall	.-356    	; 0x10e <setMotor>
 272:	2f ef       	ldi	r18, 0xFF	; 255
 274:	81 e1       	ldi	r24, 0x11	; 17
 276:	9a e7       	ldi	r25, 0x7A	; 122
 278:	21 50       	subi	r18, 0x01	; 1
 27a:	80 40       	sbci	r24, 0x00	; 0
 27c:	90 40       	sbci	r25, 0x00	; 0
 27e:	e1 f7       	brne	.-8      	; 0x278 <main+0x16>
 280:	00 c0       	rjmp	.+0      	; 0x282 <main+0x20>
 282:	00 00       	nop
	
		_delay_ms(2000);
		
		setMotor((70), (70) );
 284:	66 e4       	ldi	r22, 0x46	; 70
 286:	70 e0       	ldi	r23, 0x00	; 0
 288:	86 e4       	ldi	r24, 0x46	; 70
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	40 df       	rcall	.-384    	; 0x10e <setMotor>
 28e:	2f ef       	ldi	r18, 0xFF	; 255
 290:	83 e2       	ldi	r24, 0x23	; 35
 292:	94 ef       	ldi	r25, 0xF4	; 244
 294:	21 50       	subi	r18, 0x01	; 1
 296:	80 40       	sbci	r24, 0x00	; 0
 298:	90 40       	sbci	r25, 0x00	; 0
 29a:	e1 f7       	brne	.-8      	; 0x294 <main+0x32>
 29c:	00 c0       	rjmp	.+0      	; 0x29e <main+0x3c>
 29e:	00 00       	nop
		
		_delay_ms(4000);
	
		for (int i = 75 ; i < 256; i++)
 2a0:	cb e4       	ldi	r28, 0x4B	; 75
 2a2:	d0 e0       	ldi	r29, 0x00	; 0
		{
			setMotor( i,i);
 2a4:	be 01       	movw	r22, r28
 2a6:	ce 01       	movw	r24, r28
 2a8:	32 df       	rcall	.-412    	; 0x10e <setMotor>
 2aa:	2f e7       	ldi	r18, 0x7F	; 127
 2ac:	8a e1       	ldi	r24, 0x1A	; 26
 2ae:	96 e0       	ldi	r25, 0x06	; 6
 2b0:	21 50       	subi	r18, 0x01	; 1
 2b2:	80 40       	sbci	r24, 0x00	; 0
 2b4:	90 40       	sbci	r25, 0x00	; 0
 2b6:	e1 f7       	brne	.-8      	; 0x2b0 <main+0x4e>
 2b8:	00 c0       	rjmp	.+0      	; 0x2ba <main+0x58>
 2ba:	00 00       	nop
		
		setMotor((70), (70) );
		
		_delay_ms(4000);
	
		for (int i = 75 ; i < 256; i++)
 2bc:	21 96       	adiw	r28, 0x01	; 1
 2be:	c1 15       	cp	r28, r1
 2c0:	21 e0       	ldi	r18, 0x01	; 1
 2c2:	d2 07       	cpc	r29, r18
 2c4:	79 f7       	brne	.-34     	; 0x2a4 <main+0x42>
 2c6:	c0 2f       	mov	r28, r16
 2c8:	d1 2f       	mov	r29, r17
			setMotor( i,i);
			_delay_ms(100);
		}
		for (int i = 255 ; i > 75; i--)
		{
			setMotor( i,i);
 2ca:	be 01       	movw	r22, r28
 2cc:	ce 01       	movw	r24, r28
 2ce:	1f df       	rcall	.-450    	; 0x10e <setMotor>
 2d0:	8f e4       	ldi	r24, 0x4F	; 79
 2d2:	93 ec       	ldi	r25, 0xC3	; 195
 2d4:	01 97       	sbiw	r24, 0x01	; 1
 2d6:	f1 f7       	brne	.-4      	; 0x2d4 <main+0x72>
 2d8:	00 c0       	rjmp	.+0      	; 0x2da <main+0x78>
 2da:	00 00       	nop
		for (int i = 75 ; i < 256; i++)
		{
			setMotor( i,i);
			_delay_ms(100);
		}
		for (int i = 255 ; i > 75; i--)
 2dc:	21 97       	sbiw	r28, 0x01	; 1
 2de:	cb 34       	cpi	r28, 0x4B	; 75
 2e0:	d1 05       	cpc	r29, r1
 2e2:	99 f7       	brne	.-26     	; 0x2ca <main+0x68>
		{
			setMotor( i,i);
			_delay_ms(10);
		}
 		
 		setMotor(160, 0);
 2e4:	60 e0       	ldi	r22, 0x00	; 0
 2e6:	70 e0       	ldi	r23, 0x00	; 0
 2e8:	80 ea       	ldi	r24, 0xA0	; 160
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	10 df       	rcall	.-480    	; 0x10e <setMotor>
 2ee:	9f e3       	ldi	r25, 0x3F	; 63
 2f0:	22 e4       	ldi	r18, 0x42	; 66
 2f2:	8f e0       	ldi	r24, 0x0F	; 15
 2f4:	91 50       	subi	r25, 0x01	; 1
 2f6:	20 40       	sbci	r18, 0x00	; 0
 2f8:	80 40       	sbci	r24, 0x00	; 0
 2fa:	e1 f7       	brne	.-8      	; 0x2f4 <main+0x92>
 2fc:	00 c0       	rjmp	.+0      	; 0x2fe <main+0x9c>
 2fe:	00 00       	nop
 		_delay_ms(250);
 		
 		setMotor(200, 200);
 300:	68 ec       	ldi	r22, 0xC8	; 200
 302:	70 e0       	ldi	r23, 0x00	; 0
 304:	88 ec       	ldi	r24, 0xC8	; 200
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	02 df       	rcall	.-508    	; 0x10e <setMotor>
 30a:	9f ef       	ldi	r25, 0xFF	; 255
 30c:	28 e0       	ldi	r18, 0x08	; 8
 30e:	8d e3       	ldi	r24, 0x3D	; 61
 310:	91 50       	subi	r25, 0x01	; 1
 312:	20 40       	sbci	r18, 0x00	; 0
 314:	80 40       	sbci	r24, 0x00	; 0
 316:	e1 f7       	brne	.-8      	; 0x310 <main+0xae>
 318:	00 c0       	rjmp	.+0      	; 0x31a <main+0xb8>
 31a:	00 00       	nop
 31c:	a5 cf       	rjmp	.-182    	; 0x268 <main+0x6>

0000031e <__vector_18>:
/************************************************************************/
/*								ISR Routines                            */
/************************************************************************/

ISR(TIMER0_OVF_vect)
{
 31e:	1f 92       	push	r1
 320:	0f 92       	push	r0
 322:	0f b6       	in	r0, 0x3f	; 63
 324:	0f 92       	push	r0
 326:	11 24       	eor	r1, r1
 328:	8f 93       	push	r24
 32a:	9f 93       	push	r25
	//Increment the value of optocount reached, used to make a kind of ad hock timer...
	int_Opto_Count_Reached++;
 32c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_end>
 330:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_end+0x1>
 334:	01 96       	adiw	r24, 0x01	; 1
 336:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_end+0x1>
 33a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_end>
 33e:	9f 91       	pop	r25
 340:	8f 91       	pop	r24
 342:	0f 90       	pop	r0
 344:	0f be       	out	0x3f, r0	; 63
 346:	0f 90       	pop	r0
 348:	1f 90       	pop	r1
 34a:	18 95       	reti

0000034c <__fixsfsi>:
 34c:	04 d0       	rcall	.+8      	; 0x356 <__fixunssfsi>
 34e:	68 94       	set
 350:	b1 11       	cpse	r27, r1
 352:	8d c0       	rjmp	.+282    	; 0x46e <__fp_szero>
 354:	08 95       	ret

00000356 <__fixunssfsi>:
 356:	70 d0       	rcall	.+224    	; 0x438 <__fp_splitA>
 358:	88 f0       	brcs	.+34     	; 0x37c <__fixunssfsi+0x26>
 35a:	9f 57       	subi	r25, 0x7F	; 127
 35c:	90 f0       	brcs	.+36     	; 0x382 <__fixunssfsi+0x2c>
 35e:	b9 2f       	mov	r27, r25
 360:	99 27       	eor	r25, r25
 362:	b7 51       	subi	r27, 0x17	; 23
 364:	a0 f0       	brcs	.+40     	; 0x38e <__fixunssfsi+0x38>
 366:	d1 f0       	breq	.+52     	; 0x39c <__fixunssfsi+0x46>
 368:	66 0f       	add	r22, r22
 36a:	77 1f       	adc	r23, r23
 36c:	88 1f       	adc	r24, r24
 36e:	99 1f       	adc	r25, r25
 370:	1a f0       	brmi	.+6      	; 0x378 <__fixunssfsi+0x22>
 372:	ba 95       	dec	r27
 374:	c9 f7       	brne	.-14     	; 0x368 <__fixunssfsi+0x12>
 376:	12 c0       	rjmp	.+36     	; 0x39c <__fixunssfsi+0x46>
 378:	b1 30       	cpi	r27, 0x01	; 1
 37a:	81 f0       	breq	.+32     	; 0x39c <__fixunssfsi+0x46>
 37c:	77 d0       	rcall	.+238    	; 0x46c <__fp_zero>
 37e:	b1 e0       	ldi	r27, 0x01	; 1
 380:	08 95       	ret
 382:	74 c0       	rjmp	.+232    	; 0x46c <__fp_zero>
 384:	67 2f       	mov	r22, r23
 386:	78 2f       	mov	r23, r24
 388:	88 27       	eor	r24, r24
 38a:	b8 5f       	subi	r27, 0xF8	; 248
 38c:	39 f0       	breq	.+14     	; 0x39c <__fixunssfsi+0x46>
 38e:	b9 3f       	cpi	r27, 0xF9	; 249
 390:	cc f3       	brlt	.-14     	; 0x384 <__fixunssfsi+0x2e>
 392:	86 95       	lsr	r24
 394:	77 95       	ror	r23
 396:	67 95       	ror	r22
 398:	b3 95       	inc	r27
 39a:	d9 f7       	brne	.-10     	; 0x392 <__fixunssfsi+0x3c>
 39c:	3e f4       	brtc	.+14     	; 0x3ac <__fixunssfsi+0x56>
 39e:	90 95       	com	r25
 3a0:	80 95       	com	r24
 3a2:	70 95       	com	r23
 3a4:	61 95       	neg	r22
 3a6:	7f 4f       	sbci	r23, 0xFF	; 255
 3a8:	8f 4f       	sbci	r24, 0xFF	; 255
 3aa:	9f 4f       	sbci	r25, 0xFF	; 255
 3ac:	08 95       	ret

000003ae <__floatunsisf>:
 3ae:	e8 94       	clt
 3b0:	09 c0       	rjmp	.+18     	; 0x3c4 <__floatsisf+0x12>

000003b2 <__floatsisf>:
 3b2:	97 fb       	bst	r25, 7
 3b4:	3e f4       	brtc	.+14     	; 0x3c4 <__floatsisf+0x12>
 3b6:	90 95       	com	r25
 3b8:	80 95       	com	r24
 3ba:	70 95       	com	r23
 3bc:	61 95       	neg	r22
 3be:	7f 4f       	sbci	r23, 0xFF	; 255
 3c0:	8f 4f       	sbci	r24, 0xFF	; 255
 3c2:	9f 4f       	sbci	r25, 0xFF	; 255
 3c4:	99 23       	and	r25, r25
 3c6:	a9 f0       	breq	.+42     	; 0x3f2 <__floatsisf+0x40>
 3c8:	f9 2f       	mov	r31, r25
 3ca:	96 e9       	ldi	r25, 0x96	; 150
 3cc:	bb 27       	eor	r27, r27
 3ce:	93 95       	inc	r25
 3d0:	f6 95       	lsr	r31
 3d2:	87 95       	ror	r24
 3d4:	77 95       	ror	r23
 3d6:	67 95       	ror	r22
 3d8:	b7 95       	ror	r27
 3da:	f1 11       	cpse	r31, r1
 3dc:	f8 cf       	rjmp	.-16     	; 0x3ce <__floatsisf+0x1c>
 3de:	fa f4       	brpl	.+62     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 3e0:	bb 0f       	add	r27, r27
 3e2:	11 f4       	brne	.+4      	; 0x3e8 <__floatsisf+0x36>
 3e4:	60 ff       	sbrs	r22, 0
 3e6:	1b c0       	rjmp	.+54     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 3e8:	6f 5f       	subi	r22, 0xFF	; 255
 3ea:	7f 4f       	sbci	r23, 0xFF	; 255
 3ec:	8f 4f       	sbci	r24, 0xFF	; 255
 3ee:	9f 4f       	sbci	r25, 0xFF	; 255
 3f0:	16 c0       	rjmp	.+44     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 3f2:	88 23       	and	r24, r24
 3f4:	11 f0       	breq	.+4      	; 0x3fa <__floatsisf+0x48>
 3f6:	96 e9       	ldi	r25, 0x96	; 150
 3f8:	11 c0       	rjmp	.+34     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 3fa:	77 23       	and	r23, r23
 3fc:	21 f0       	breq	.+8      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3fe:	9e e8       	ldi	r25, 0x8E	; 142
 400:	87 2f       	mov	r24, r23
 402:	76 2f       	mov	r23, r22
 404:	05 c0       	rjmp	.+10     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 406:	66 23       	and	r22, r22
 408:	71 f0       	breq	.+28     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 40a:	96 e8       	ldi	r25, 0x86	; 134
 40c:	86 2f       	mov	r24, r22
 40e:	70 e0       	ldi	r23, 0x00	; 0
 410:	60 e0       	ldi	r22, 0x00	; 0
 412:	2a f0       	brmi	.+10     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 414:	9a 95       	dec	r25
 416:	66 0f       	add	r22, r22
 418:	77 1f       	adc	r23, r23
 41a:	88 1f       	adc	r24, r24
 41c:	da f7       	brpl	.-10     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 41e:	88 0f       	add	r24, r24
 420:	96 95       	lsr	r25
 422:	87 95       	ror	r24
 424:	97 f9       	bld	r25, 7
 426:	08 95       	ret

00000428 <__fp_split3>:
 428:	57 fd       	sbrc	r21, 7
 42a:	90 58       	subi	r25, 0x80	; 128
 42c:	44 0f       	add	r20, r20
 42e:	55 1f       	adc	r21, r21
 430:	59 f0       	breq	.+22     	; 0x448 <__fp_splitA+0x10>
 432:	5f 3f       	cpi	r21, 0xFF	; 255
 434:	71 f0       	breq	.+28     	; 0x452 <__fp_splitA+0x1a>
 436:	47 95       	ror	r20

00000438 <__fp_splitA>:
 438:	88 0f       	add	r24, r24
 43a:	97 fb       	bst	r25, 7
 43c:	99 1f       	adc	r25, r25
 43e:	61 f0       	breq	.+24     	; 0x458 <__fp_splitA+0x20>
 440:	9f 3f       	cpi	r25, 0xFF	; 255
 442:	79 f0       	breq	.+30     	; 0x462 <__fp_splitA+0x2a>
 444:	87 95       	ror	r24
 446:	08 95       	ret
 448:	12 16       	cp	r1, r18
 44a:	13 06       	cpc	r1, r19
 44c:	14 06       	cpc	r1, r20
 44e:	55 1f       	adc	r21, r21
 450:	f2 cf       	rjmp	.-28     	; 0x436 <__fp_split3+0xe>
 452:	46 95       	lsr	r20
 454:	f1 df       	rcall	.-30     	; 0x438 <__fp_splitA>
 456:	08 c0       	rjmp	.+16     	; 0x468 <__fp_splitA+0x30>
 458:	16 16       	cp	r1, r22
 45a:	17 06       	cpc	r1, r23
 45c:	18 06       	cpc	r1, r24
 45e:	99 1f       	adc	r25, r25
 460:	f1 cf       	rjmp	.-30     	; 0x444 <__fp_splitA+0xc>
 462:	86 95       	lsr	r24
 464:	71 05       	cpc	r23, r1
 466:	61 05       	cpc	r22, r1
 468:	08 94       	sec
 46a:	08 95       	ret

0000046c <__fp_zero>:
 46c:	e8 94       	clt

0000046e <__fp_szero>:
 46e:	bb 27       	eor	r27, r27
 470:	66 27       	eor	r22, r22
 472:	77 27       	eor	r23, r23
 474:	cb 01       	movw	r24, r22
 476:	97 f9       	bld	r25, 7
 478:	08 95       	ret

0000047a <__mulsf3>:
 47a:	0b d0       	rcall	.+22     	; 0x492 <__mulsf3x>
 47c:	78 c0       	rjmp	.+240    	; 0x56e <__fp_round>
 47e:	69 d0       	rcall	.+210    	; 0x552 <__fp_pscA>
 480:	28 f0       	brcs	.+10     	; 0x48c <__mulsf3+0x12>
 482:	6e d0       	rcall	.+220    	; 0x560 <__fp_pscB>
 484:	18 f0       	brcs	.+6      	; 0x48c <__mulsf3+0x12>
 486:	95 23       	and	r25, r21
 488:	09 f0       	breq	.+2      	; 0x48c <__mulsf3+0x12>
 48a:	5a c0       	rjmp	.+180    	; 0x540 <__fp_inf>
 48c:	5f c0       	rjmp	.+190    	; 0x54c <__fp_nan>
 48e:	11 24       	eor	r1, r1
 490:	ee cf       	rjmp	.-36     	; 0x46e <__fp_szero>

00000492 <__mulsf3x>:
 492:	ca df       	rcall	.-108    	; 0x428 <__fp_split3>
 494:	a0 f3       	brcs	.-24     	; 0x47e <__mulsf3+0x4>

00000496 <__mulsf3_pse>:
 496:	95 9f       	mul	r25, r21
 498:	d1 f3       	breq	.-12     	; 0x48e <__mulsf3+0x14>
 49a:	95 0f       	add	r25, r21
 49c:	50 e0       	ldi	r21, 0x00	; 0
 49e:	55 1f       	adc	r21, r21
 4a0:	62 9f       	mul	r22, r18
 4a2:	f0 01       	movw	r30, r0
 4a4:	72 9f       	mul	r23, r18
 4a6:	bb 27       	eor	r27, r27
 4a8:	f0 0d       	add	r31, r0
 4aa:	b1 1d       	adc	r27, r1
 4ac:	63 9f       	mul	r22, r19
 4ae:	aa 27       	eor	r26, r26
 4b0:	f0 0d       	add	r31, r0
 4b2:	b1 1d       	adc	r27, r1
 4b4:	aa 1f       	adc	r26, r26
 4b6:	64 9f       	mul	r22, r20
 4b8:	66 27       	eor	r22, r22
 4ba:	b0 0d       	add	r27, r0
 4bc:	a1 1d       	adc	r26, r1
 4be:	66 1f       	adc	r22, r22
 4c0:	82 9f       	mul	r24, r18
 4c2:	22 27       	eor	r18, r18
 4c4:	b0 0d       	add	r27, r0
 4c6:	a1 1d       	adc	r26, r1
 4c8:	62 1f       	adc	r22, r18
 4ca:	73 9f       	mul	r23, r19
 4cc:	b0 0d       	add	r27, r0
 4ce:	a1 1d       	adc	r26, r1
 4d0:	62 1f       	adc	r22, r18
 4d2:	83 9f       	mul	r24, r19
 4d4:	a0 0d       	add	r26, r0
 4d6:	61 1d       	adc	r22, r1
 4d8:	22 1f       	adc	r18, r18
 4da:	74 9f       	mul	r23, r20
 4dc:	33 27       	eor	r19, r19
 4de:	a0 0d       	add	r26, r0
 4e0:	61 1d       	adc	r22, r1
 4e2:	23 1f       	adc	r18, r19
 4e4:	84 9f       	mul	r24, r20
 4e6:	60 0d       	add	r22, r0
 4e8:	21 1d       	adc	r18, r1
 4ea:	82 2f       	mov	r24, r18
 4ec:	76 2f       	mov	r23, r22
 4ee:	6a 2f       	mov	r22, r26
 4f0:	11 24       	eor	r1, r1
 4f2:	9f 57       	subi	r25, 0x7F	; 127
 4f4:	50 40       	sbci	r21, 0x00	; 0
 4f6:	8a f0       	brmi	.+34     	; 0x51a <__stack+0x1b>
 4f8:	e1 f0       	breq	.+56     	; 0x532 <__stack+0x33>
 4fa:	88 23       	and	r24, r24
 4fc:	4a f0       	brmi	.+18     	; 0x510 <__stack+0x11>
 4fe:	ee 0f       	add	r30, r30
 500:	ff 1f       	adc	r31, r31
 502:	bb 1f       	adc	r27, r27
 504:	66 1f       	adc	r22, r22
 506:	77 1f       	adc	r23, r23
 508:	88 1f       	adc	r24, r24
 50a:	91 50       	subi	r25, 0x01	; 1
 50c:	50 40       	sbci	r21, 0x00	; 0
 50e:	a9 f7       	brne	.-22     	; 0x4fa <__mulsf3_pse+0x64>
 510:	9e 3f       	cpi	r25, 0xFE	; 254
 512:	51 05       	cpc	r21, r1
 514:	70 f0       	brcs	.+28     	; 0x532 <__stack+0x33>
 516:	14 c0       	rjmp	.+40     	; 0x540 <__fp_inf>
 518:	aa cf       	rjmp	.-172    	; 0x46e <__fp_szero>
 51a:	5f 3f       	cpi	r21, 0xFF	; 255
 51c:	ec f3       	brlt	.-6      	; 0x518 <__stack+0x19>
 51e:	98 3e       	cpi	r25, 0xE8	; 232
 520:	dc f3       	brlt	.-10     	; 0x518 <__stack+0x19>
 522:	86 95       	lsr	r24
 524:	77 95       	ror	r23
 526:	67 95       	ror	r22
 528:	b7 95       	ror	r27
 52a:	f7 95       	ror	r31
 52c:	e7 95       	ror	r30
 52e:	9f 5f       	subi	r25, 0xFF	; 255
 530:	c1 f7       	brne	.-16     	; 0x522 <__stack+0x23>
 532:	fe 2b       	or	r31, r30
 534:	88 0f       	add	r24, r24
 536:	91 1d       	adc	r25, r1
 538:	96 95       	lsr	r25
 53a:	87 95       	ror	r24
 53c:	97 f9       	bld	r25, 7
 53e:	08 95       	ret

00000540 <__fp_inf>:
 540:	97 f9       	bld	r25, 7
 542:	9f 67       	ori	r25, 0x7F	; 127
 544:	80 e8       	ldi	r24, 0x80	; 128
 546:	70 e0       	ldi	r23, 0x00	; 0
 548:	60 e0       	ldi	r22, 0x00	; 0
 54a:	08 95       	ret

0000054c <__fp_nan>:
 54c:	9f ef       	ldi	r25, 0xFF	; 255
 54e:	80 ec       	ldi	r24, 0xC0	; 192
 550:	08 95       	ret

00000552 <__fp_pscA>:
 552:	00 24       	eor	r0, r0
 554:	0a 94       	dec	r0
 556:	16 16       	cp	r1, r22
 558:	17 06       	cpc	r1, r23
 55a:	18 06       	cpc	r1, r24
 55c:	09 06       	cpc	r0, r25
 55e:	08 95       	ret

00000560 <__fp_pscB>:
 560:	00 24       	eor	r0, r0
 562:	0a 94       	dec	r0
 564:	12 16       	cp	r1, r18
 566:	13 06       	cpc	r1, r19
 568:	14 06       	cpc	r1, r20
 56a:	05 06       	cpc	r0, r21
 56c:	08 95       	ret

0000056e <__fp_round>:
 56e:	09 2e       	mov	r0, r25
 570:	03 94       	inc	r0
 572:	00 0c       	add	r0, r0
 574:	11 f4       	brne	.+4      	; 0x57a <__fp_round+0xc>
 576:	88 23       	and	r24, r24
 578:	52 f0       	brmi	.+20     	; 0x58e <__fp_round+0x20>
 57a:	bb 0f       	add	r27, r27
 57c:	40 f4       	brcc	.+16     	; 0x58e <__fp_round+0x20>
 57e:	bf 2b       	or	r27, r31
 580:	11 f4       	brne	.+4      	; 0x586 <__fp_round+0x18>
 582:	60 ff       	sbrs	r22, 0
 584:	04 c0       	rjmp	.+8      	; 0x58e <__fp_round+0x20>
 586:	6f 5f       	subi	r22, 0xFF	; 255
 588:	7f 4f       	sbci	r23, 0xFF	; 255
 58a:	8f 4f       	sbci	r24, 0xFF	; 255
 58c:	9f 4f       	sbci	r25, 0xFF	; 255
 58e:	08 95       	ret

00000590 <_exit>:
 590:	f8 94       	cli

00000592 <__stop_program>:
 592:	ff cf       	rjmp	.-2      	; 0x592 <__stop_program>
